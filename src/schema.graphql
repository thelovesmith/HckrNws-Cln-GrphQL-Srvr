#?Remember you must implement resolvers for each relation in you GraphQL schema 
# Exclamation marks (!) in the typedef means this value can never be null 
# Brackets around a field's type value means that type has its own Type Definition 



#! Here a query type is being defined and it has two fields info, and feed. the Info field has a type of String! and feed has a type of Link. 
type Query {
  info: String!
  feed: [Link!]!
}

type Mutation {
  post(url: String!, description: String!): Link!
  signup(email: String!, password: String!, name: String!): AuthPayLoad
  login(email: String!, password: String!): AuthPayLoad
  vote(linkId: ID!): Vote
}

type Link {
  id: ID!
  description: String!
  url: String!
  postedBy: User
  votes: [Vote!]!
}

type AuthPayLoad {
  token: String
  user: User
}

type User {
  id: ID!
  name: String!
  email: String!
  links: [Link!]!
}

type Subscription {
  newLink: Link
  newVote: Vote
}

type Vote {
  id: ID!
  link: Link!
  user: User!
}